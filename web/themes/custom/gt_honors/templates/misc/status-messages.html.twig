{#
/**
 * @file
 * Theme override for status messages.
 *
 * Displays status, error, and warning messages, grouped by type.
 *
 * An invisible heading identifies the messages for assistive technology.
 * Sighted users see a colored box. See http://www.w3.org/TR/WCAG-TECHS/H69.html
 * for info.
 *
 * Add an ARIA label to the contentinfo area so that assistive technology
 * user agents will better describe this landmark.
 *
 * Available variables:
 * - message_list: List of messages to be displayed, grouped by type.
 * - status_headings: List of all status types.
 * - display: (optional) May have a value of 'status' or 'error' when only
 *   displaying messages of that specific type.
 * - attributes: HTML attributes for the element, including:
 *   - class: HTML classes.
 */
#}
{{ attach_library('gt/status-messages') }}

<div data-drupal-messages>
  <div class="modal fade" id="status-message" tabindex="-1" role="dialog">
    <div class="modal-dialog max-w-[800px]">
      <div class="modal-content">
        <div class="modal-body">
          <div class="modal-header justify-end">
            <button type="button" class="close border-0 bg-transparent" data-bs-dismiss="modal" aria-label="{{ 'Close message'|t }}">
              <i class="icon-close"></i>
            </button>
          </div>
          <div class="status-message-content">
            {% block messages %}
              {% for type, messages in message_list %}
                {%
                  set classes = [
                  'messages',
                  'messages--' ~ type,
                ]
                %}
                <div role="contentinfo" aria-label="{{ status_headings[type] }}"{{ attributes.addClass(classes)|without('role', 'aria-label') }}>
                  {% if type == 'error' %}
                  <div role="alert">
                    {% endif %}
                    {% if status_headings[type] %}
                      <h2 class="visually-hidden">{{ status_headings[type] }}</h2>
                    {% endif %}
                    {% if messages|length > 1 %}
                      <ul class="messages__list">
                        {% for message in messages %}
                          <li class="messages__item">{{ message }}</li>
                        {% endfor %}
                      </ul>
                    {% else %}
                      {{ messages|first }}
                    {% endif %}
                    {% if type == 'error' %}
                  </div>
                  {% endif %}
                </div>
                {# Remove type specific classes. #}
                {% set attributes = attributes.removeClass(classes) %}
              {% endfor %}
            {% endblock messages %}
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
